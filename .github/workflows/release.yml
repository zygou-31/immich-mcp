name: Release

on:
  release:
    types: [created]

jobs:
  functional-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify version consistency
        run: |
          PYPROJECT_VERSION=$(grep -oP 'version = "\K[^"]+' pyproject.toml)
          TAG_VERSION=${{ github.event.release.tag_name }}
          # Strip 'v' prefix from tag if it exists
          if [[ $TAG_VERSION == v* ]]; then
            TAG_VERSION="${TAG_VERSION:1}"
          fi
          if [ "$PYPROJECT_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Version mismatch! pyproject.toml version is $PYPROJECT_VERSION, but tag is $TAG_VERSION"
            exit 1
          fi
          echo "Success: pyproject.toml version ($PYPROJECT_VERSION) matches tag ($TAG_VERSION)."
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install uv
          uv pip install --system '.[dev]'
      - name: Run functional tests
        env:
          IMMICH_BASE_URL: ${{ secrets.IMMICH_BASE_URL }}
          IMMICH_API_KEY: ${{ secrets.IMMICH_API_KEY }}
        run: python tests/functional/run_functional_tests.py

  pypi:
    needs: functional-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: pip install build
      - name: Build package
        run: python -m build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker:
    needs: functional-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/immich-mcp:latest,${{ secrets.DOCKERHUB_USERNAME }}/immich-mcp:${{ github.event.release.tag_name }}
